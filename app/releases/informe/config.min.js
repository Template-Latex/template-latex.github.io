let href_github_project="https://github.com/Template-Latex/Template-Informe/releases/",href_github_project_source="https://github.com/Template-Latex/Template-Informe/",href_json_releases="https://api.github.com/repos/Template-Latex/Template-Informe/releases",href_pdf_version="../Informe/Template-Informe v{0}.pdf",stats_name="Informe",update_download_counter="Template-Informe",downloadOtherBackgroundBlur=1,hfGallery,lastClickedSourcecode="",line_abstract=[75],line_authortable=[34],line_docinit=[86],
line_infodocument=[18],portraitGallery,totalHfStyles=16,totalPortraitStyles=21;
notification.sabiasque={1:"Existen m\u00e1s de 20 estilos de portada distintos, revisa las configuraciones :)",2:"El template est\u00e1 escrito en m\u00e1s de 8k l\u00edneas de c\u00f3digo en LaTeX",3:"Existen m\u00e1s de 20 estilos de header-footer, revisa las configuraciones :)",4:"Existen m\u00e1s de 280 configuraciones en el template",5:"El template da soporte a m\u00e1s de 70 lenguajes de programaci\u00f3n",6:"Es posible cambiar la fuente del texto, revisa las configuraciones :)",7:"Es posible cambiar todos los colores del documento, revisa las configuraciones :)",
8:"Es posible cambiar los tama\u00f1os de todos los textos del documento, revisa las configuraciones :)",9:"El template se viene desarrollando desde el a\u00f1o 2016",10:"Quiz\u00e1s una de las cosas m\u00e1s poderosas de LaTeX son los macros, puedes automatizar cualquier cosa mediante el uso de funciones, de hecho, casi todo el template es un gran conjunto de macros y configuraciones",11:"El \u00edndice puede tener distintos tipos de orden, revisa las configuraciones :)",12:"Puedes utilizar el template para generar reportes automatizados, s\u00f3lo basta generar el .tex con alguna herramienta como python y utilizar pdf2latex para compilar",
13:"Con tikz puedes generar complejas figuras utilizando dibujo vectorial (svg)",14:"El manual online s\u00f3lo da soporte a la \u00faltima versi\u00f3n del template",15:"A\u00fan existen muchos bugs, an\u00edmate a reportar alguno :)",16:"El template tiene soporte completo en overleaf",17:"Se puede cambiar la posici\u00f3n de todas las leyendas de los objetos, revisa las configuraciones :)",18:"Existe un <i>easter-egg</i> que nadie a\u00fan lo ha encontrado",19:"Se puede cambiar el nombre de todos los elementos del template, revisa las configuraciones :)",
20:"Una de las librer\u00edas que m\u00e1s demoran la compilaci\u00f3n en LaTeX es tikz",21:"Desde la versi\u00f3n 6.8.0 se pueden insertar ecuaciones en el \u00edndice",22:"Todos los subtemplates nacen a partir de template-informe",23:"Template-Informe es usado por personas de m\u00e1s de 30 pa\u00edses en el mundo",24:"La primera versi\u00f3n p\u00fablica del template fue la 1.8.5",25:'El autor hizo un taller de LaTex? <a href="https://github.ppizarror.com/taller-latex" target="_blank">https://github.ppizarror.com/taller-latex</a>',
26:"La mejor manera de crear tablas en LaTeX es usar Excel2LaTeX",27:'Si usas TexStudio existe un plugin para autocompletar todas las funciones del template<br><a href="https://github.com/Template-Latex/cwl-docs" target="_blank">https://github.com/Template-Latex/cwl-docs</a>',28:"El autor @ppizarror recomienda utilizar TexStudio para windows/linux y Overleaf para la web",29:"Un 70% de la gente prefire descargar la versi\u00f3n normal, 30% la modificada",30:"El departamento que m\u00e1s descarga el template es el\u00e9ctrica (13%), seguido de ingenier\u00eda civil (12%) y ciencias de la computaci\u00f3n (11%)",
31:"Es posible cambiar el color de la p\u00e1gina, revisa las configuraciones :)",32:"Puedes sugerir feedback o notificar de cualquier error al correo",33:'Graficar con LaTeX es muy sencillo, prueba a usar <a href="https://www.overleaf.com/learn/latex/Pgfplots_package" target="_blank">Pgfplots</a>',34:"La configuraci\u00f3n <i>\\portraitstyle</i> permite cambiar la portada del documento",35:"La configuraci\u00f3n <i>\\hfstyle</i> permite cambiar la cabecera y pi\u00e9 de p\u00e1gina del documento",
36:"Es posible desactivar la numeraci\u00f3n con n\u00fameros romanos del principio del documento con la configuraci\u00f3n <i>\\predocromannumber</i>",37:"LaTeX data desde el a\u00f1o 1984",38:'Puedes seguir el desarrollo de Template-Informe dando una estrella a su p\u00e1gina en github <a href="https://github.com/Template-Latex/Template-Informe/" target="_blank">https://github.com/Template-Latex/Template-Informe/</a>',39:"Los lenguajes m\u00e1s utilizados en el template son Java, Python y Matlab",
40:"El template importa y configura m\u00e1s de 80 librer\u00edas",41:"Es recomendable utilizar imagenes .eps o .pdf para tener mayor resoluci\u00f3n",42:"\u00bfTe aburre la mismo tipo de letra siempre? Prueba modificando la configuraci\u00f3n <i>\\fontdocument</i>",43:"\u00bfTe aburre siempre la misma portada? Prueba modificando la configuraci\u00f3n <i>\\portraitstyle</i>",44:"\u00bfTe gustar\u00eda tener el texto de las leyendas en negrita? Prueba modificando la configuraci\u00f3n <i>\\captiontextbold</i>",
45:"\u00bfEres ayudante o profesor de alg\u00fan curso? Prueba utilizando Template-Controles o Template-Auxiliares",46:"Puedes a\u00f1adir el n\u00famero de secci\u00f3n/subsecci\u00f3n/etc al n\u00famero de cada objeto, como Figura 1.2, revisa las configuraciones <i>\\showsectioncaption</i>",47:"Recuerda revisar constantemente nuevas actualizaciones para estar al d\u00eda con los parches y mejoras",48:"La diferencia entre las sub-versiones (ejemplo) <i>6.3</i> y <i>6.4</i> son debido a cambios importantes en configuraciones; la diferencia entre versiones (ejemplo) <i>6.0</i> y <i>7.0</i> son cambios notables en la funcionalidad y mec\u00e1nica de funciones, configuraciones u otros",
49:"El template tiene m\u00e1s de cinco a\u00f1os de desarrollo constante",50:"La monoton\u00eda aburre a cualquiera, prueba a darle sabor al template jugando con las configuraciones, por ejemplo con una portada nueva",51:'En cada nueva versi\u00f3n se verifica que el tiempo que tarda en compilar el template no suba, puedes revisar el tiempo promedio de compilaci\u00f3n (del archivo de ejemplo) en <a href="https://latex.ppizarror.com/stats/?template=Informe" target="_blank">https://latex.ppizarror.com/stats/?template=Informe</a>',
52:"Si programar no es lo tuyo pero a\u00fan as\u00ed quieres aportar al desarrollo del template puedes sugerir cambios en el manual online, descripci\u00f3n de las configuraciones o notificar errores :)"};notification.encuesta={content:"",persistent:!0};
let portraitRequiresAdditional={4:"\\portraitimageF, \\portraitimageparamsF",5:"\\portraitimageG, \\portraitimageparamsG",6:"\\portraitimageH, \\portraitimageparamsH",15:"\\portraitimageA, \\portraitimageparamsA, \\portraitimagerightA, \\portraitimagerightparamsA",16:"\\portraitbackgroundimageB, \\portraitbackgroundcolorB",17:"\\portraitimageC, \\portraitimageboxedC, \\portraitimageboxedwidthC, \\portraitimageparamsC",18:"\\portraitimageD, \\portraitimageboxedD, \\portraitimageboxedwidthD, \\portraitimageparamsD",
20:"\\portraitverticalspaceE",21:"\\portraitimageI, \\portraitimageboxedI, \\portraitimageboxedwidthI, \\portraitimageparamsI"},cmd_sourcecode={abap:"\\begin{sourcecode}{abap}{Ejemplo en ABAP.}\n* Primitive types:\nDATA: COUNTER      TYPE I,\n      VALIDITY     TYPE I VALUE 60,\n      TAXRATE(3)   TYPE P DECIMALS 1,\n      LASTNAME(20) TYPE C,\n      DESCRIPTION  TYPE STRING.\n\n* Dictionary types:\nDATA: ORIGIN       TYPE COUNTRY.\n\n* Internal table:\nDATA: T_FLIGHTS    TYPE TABLE OF FLIGHTINFO,\n      T_LOOKUP     TYPE HASHED TABLE OF FLT_LOOKUP.\n\n* Objects:\nDATA: BOOKING      TYPE REF TO CL_FLT_BOOKING.\n\\end{sourcecode}",
ada:'\\begin{sourcecode}{ada}{Ejemplo en Ada.}\nMODULE Hello;\nFROM STextIO IMPORT WriteString;\nBEGIN\n  WriteString("Hello World!");\nEND Hello.\n\\end{sourcecode}',assemblerx64:"\\begin{sourcecode}{assemblerx64}{Assembler x64.}\ncdqe 1, r8\npush 1\nadd rsp, 4\npush 1\n\\end{sourcecode}",assemblerx86:"\\begin{sourcecode}{assemblerx86}{Assembler x86.}\n; ---------------------------------------------\n; Programa que imprime un string en la pantalla\n; ---------------------------------------------\n.model small              ; modelo de memoria\n\n.stack                    ; segmento del stack\n\n.data                     ; segmento de datos\nCadena1 DB 'Hola Mundo.$' ; string a imprimir (finalizado en $)\n\n.code                     ; segmento del c\u00f3digo\n\n; ---------------------------------------------\n; Inicio del programa\n; ---------------------------------------------\nprograma:\n\t; ------------------------------------\n\t; inicia el segmento de datos\n\t; ------------------------------------\n\tMOV AX, @data          ; carga en AX la direcci\u00f3n del segmento de datos\n\tMOV DS, AX             ; mueve la direcci\u00f3n al registro de segmento por medio de AX\n\t\n\t; ------------------------------------\n\t; Imprime un string en pantalla\n\t; ------------------------------------\n\tMOV DX, offset Cadena1 ; mueve a DX la direcci\u00f3n del string a imprimir\n\tMOV AH, 9              ; AH = c\u00f3digo para indicar al MS DOS que imprima en la pantalla, el string en DS:DX\n\tINT 21h                ; llamada al MS DOS para ejecutar la funci\u00f3n (en este caso especificada en AH)\n\n\t; ------------------------------------\n\t; Finaliza el programa\n\t; ------------------------------------\n\tINT 20h                ; llamada al MS DOS para finalizar el programa\n\n\tend programa\n\\end{sourcecode}",
awk:'\\begin{sourcecode}{awk}{Ejemplo en Awk.}\nBEGIN {\n    FS="[^a-zA-Z]+"\n}\n{\n    for (i=1; i<=NF; i++)\n        words[tolower($i)]++\n}\nEND {\n    for (i in words)\n        print i, words[i]\n}\n\\end{sourcecode}',bash:'\\begin{sourcecode}[]{bash}{Un poco de bash.}\n# Muestra toda la informaci\u00f3n de la bater\u00eda\nfunction battr-info {\n\twrks-scripts\n\tdata=$(ioreg -l -w0 |grep Capacity)\n\tpython2.7 battery_info.py $data\n\tcd - >> config/.empty\n}\n\nfunction qtest-java {\n\tif [ -z "${1}" ]; then\n\techo-err \'Nombre fuente no definido\'\n\telse\n\tvim $1\n\tjavac -encoding ISO-8859-1 $1 $2 $3\n\tblankspace=""\n\tfirst=$1\n\tfirst=${first/.java/$blankspace}\n\tjava $first\n\tfi\n}\n\nPATH=$PATH:"/Library/Frameworks/Python.framework/Versions/2.7/bin:${PATH}"\nPATH=$PATH:"/Applications/Utilities/Lynxlet.app/Contents/Resources/lynx/bin"\nexport PATH\n\nalias ga=\'git add \'\ndig +short myip.opendns.com @resolver1.opendns.com\ngcc "$@" -o $first\n\n::claramente esto no funcionar\u00e1::\nsudo x, call y\nrem esto es un comentario en windows\nhistory -c rm a, ls -d killall e mv | grep | awk python \'hola\'\nvim uwu printf \'have you seen him\' -z\ngit doge ssh cp cd\n\\end{sourcecode}',
basic:'\\begin{sourcecode}[\\label{codigobasic}]{basic}{Ejemplo en Basic.}\nREM QuickBASIC example\n\nREM Forward declaration - allows the main code to call a\nREM    subroutine that is defined later in the source code\nDECLARE SUB PrintSomeStars (StarCount!)\n\nREM Main program follows\nINPUT "What is your name: ", UserName$\nPRINT "Hello "; UserName$\nDO\n   INPUT "How many stars do you want: ", NumStars\n   CALL PrintSomeStars(NumStars)\n   DO\n      INPUT "Do you want more stars? ", Answer$\n   LOOP UNTIL Answer$ <> ""\n   Answer$ = LEFT$(Answer$, 1)\nLOOP WHILE UCASE$(Answer$) = "Y"\nPRINT "Goodbye "; UserName$\nEND\n\nREM subroutine definition\nSUB PrintSomeStars (StarCount)\n   REM This procedure uses a local variable called Stars$\n   Stars$ = STRING$(StarCount, "*")\n   PRINT Stars$\nEND SUB\n\\end{sourcecode}',
c:'\\begin{sourcecode}[]{c}{Codigo en c.}\n#include <stdio.h>\nint main(){\n\tint i, j, rows;\n\t\n\tprintf("Enter number of rows: ");\n\tscanf("%d",&rows);\n\t\n\tfor(i=1; i<=rows; ++i){\n\t\tfor(j=1; j<=i; ++j){\n\t\t\tprintf("* ");\n\t\t}\n\t\tprintf("\\n");\n\t}\n\treturn 0;\n}\n\\end{sourcecode}',caml:'\\begin{sourcecode}{caml}{Ejemplo en Caml.}\n# let haar l =\n   let rec aux l s d = \n     match l, s, d with\n       [s], [], d -> s :: d\n     | [], s, d -> aux s [] d\n     | h1 :: h2 :: t, s, d -> aux t (h1 + h2 :: s) (h1 - h2 :: d)\n     | _ -> invalid_arg "haar" \n     in aux l [] [];;\nval haar : int list -> int list = <fun>\n\\end{sourcecode}',
cmake:"\\begin{sourcecode}{cmake}{Ejemplo en cmake.}\n# Propiedades del make\ncmake_minimum_required(VERSION 3.10)\nproject(CC7515-AUX-1)\nset(CMAKE_CXX_STANDARD 11)\n\n# Crea un set, contiene varios archivos que permiten compilar al principal\nset(AUX1_EX10\nsrc/10_complex_v1_sep.cpp)\n\nset(AUX1_STACK\nsrc/13_stack.h\nsrc/12_complex_v3.cpp)\n\n# Define ejecutables\nadd_executable(EX-1-HELLO-WORLD src/01_helloworld.cpp)\nadd_executable(EX-2-VARIABLES src/02_variables.cpp)\nadd_executable(EX-3-IF-ELSE src/03_if_else.cpp)\nadd_executable(EX-4-WHILE-FOR src/04_while_for.cpp)\n...\n\\end{sourcecode}",
cobol:'\\begin{sourcecode}{cobol}{Ejemplo en Cobol.}\n*> Terminator period ("implicit termination")\nIF invalid-record\n    IF no-more-records\n        NEXT SENTENCE\n    ELSE\n        READ record-file\n            AT END SET no-more-records TO TRUE.\n\n*> Scope terminators ("explicit termination")\nIF invalid-record\n    IF no-more-records\n        CONTINUE\n    ELSE\n        READ record-file\n            AT END SET no-more-records TO TRUE\n        END-READ\n    END-IF\nEND-IF\n\\end{sourcecode}',
cpp:'\\begin{sourcecode}{cpp}{Suma en C++.}\n#include <iostream>\nusing namespace std;\n\nint main()\n{\n\tint n, sum = 0;\n\t\n\tcout << "Enter a positive integer: ";\n\tcin >> n;\n\t\n\tfor (int i = 1; i <= n; ++i) {\n\t\tsum += i;\n\t}\n\t\n\tcout << "Sum = " << sum;\n\treturn 0;\n}\n\\end{sourcecode}',csharp:'\\begin{sourcecode}[]{csharp}{Ejemplo en C#.}\n/*\n* C# Program to Get a Number and Display the Sum of the Digits \n*/\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace Program\n{\n\tclass Program\n\t{\n\t\tstatic void Main(string[] args)\n\t\t{\n\t\t\tint num, sum = 0, r;\n\t\t\tConsole.WriteLine("Enter a Number : ");\n\t\t\tnum = int.Parse(Console.ReadLine());\n\t\t\twhile (num != 0)\n\t\t\t{\n\t\t\t\tr = num % 10;\n\t\t\t\tnum = num / 10;\n\t\t\t\tsum = sum + r;\n\t\t\t}\n\t\t\tConsole.WriteLine("Sum of Digits of the Number : "+sum);\n\t\t\tConsole.ReadLine();\n\t\t\t\n\t\t}\n\t}\n}\n\\end{sourcecode}',
css:"\\begin{sourcecode}{css}{C\u00f3digo CSS.}\n.fecha-estilo {\n\tcolor: #819198;\n\tfont-size: 15px;\n\tposition: relative;\n\tbottom: 0;\n}\n\n.btn {\n\t-moz-box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.75);\n\t-webkit-box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.75);\n\tbackground-color: rgba(100, 100, 100, 0.4);\n\tborder-radius: 0.3rem;\n\tborder: 1px solid rgba(255, 255, 255, 0.2);\n\tbox-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.75);\n\tcolor: rgba(255, 255, 255, 1);\n\tdisplay: inline-block;\n\tmargin-bottom: 1rem;\n\tmargin-left: 0;\n\tmargin-right: 0.5rem;\n\topacity: 1.0;\n\toutline: none;\n\ttransition: color 0.2s, background-color 0.2s, border-color 0.2s;\n}\n\n.btn:hover {\n\topacity: 1.0;\n}\n\n.btn-pro {\n\t-moz-box-shadow: 0 0 5px 0 rgba(10, 10, 10, 0.75);\n\t-webkit-box-shadow: 0 0 5px 0 rgba(10, 10, 10, 0.75);\n\tbackground-color: rgba(210, 210, 210, 0.85);\n\tborder-radius: 0.3rem;\n\tborder: 1px solid rgba(255, 255, 255, 0.5);\n\tbox-shadow: 0 0 5px 0 rgba(10, 10, 10, 0.75);\n\tcolor: rgba(20, 20, 20, 1);\n\tdisplay: inline-block;\n\tfont-weight: bolder;\n\tmargin-bottom: 1rem;\n\tmargin-left: 0;\n\tmargin-right: 0.5rem;\n\topacity: 0.9;\n\toutline: none;\n\ttransition: color 0.2s, background-color 0.2s, border-color 0.2s;\n}\n\\end{sourcecode}",
csv:"\\begin{sourcecode}{csv}{Archivo en csv.}\norand-car-with-bbs/training/images/0001_5179655_46066.jpg,83,8,126,61,4\norand-car-with-bbs/training/images/0001_5179655_46066.jpg,143,11,182,61,6\norand-car-with-bbs/training/images/0001_5179655_46066.jpg,204,11,247,54,0\norand-car-with-bbs/training/images/0001_5179655_46066.jpg,264,15,307,58,6\norand-car-with-bbs/training/images/0001_5179655_46066.jpg,329,11,365,62,6\norand-car-with-bbs/training/images/0002_5179657_53862.jpg,80,11,114,56,5\norand-car-with-bbs/training/images/0002_5179657_53862.jpg,116,13,150,62,3\norand-car-with-bbs/training/images/0002_5179657_53862.jpg,166,15,205,68,8\n\\end{sourcecode}",
cuda:"\\begin{sourcecode}[]{cuda}{Un poco de cuda.}\n__global__ void foo(){\n}\n\n__global__ void addKernel(int *c, const int *a, const int *b){\n\tint i = threadIdx.x;\n\tc[i] = a[i] + b[i];\n}\n\nfoo<<<n,m>>>();\n\\end{sourcecode}",dart:"\\begin{sourcecode}{dart}{Ejemplo en Dart.}\n#import('dart:html');\n\nclass Contacts {\n\n  Contacts() {\n  }\n\n  void run() {\n    write(\"Hello World!\");\n  }\n\n  void write(String message) {\n    // the HTML library defines a global \"document\" variable\n    document.query('#status').innerHTML = message;\n  }\n}\n\nvoid main() {\n  new Contacts().run();\n}\n\\end{sourcecode}",
docker:"\\begin{sourcecode}{docker}{Docker.}\nversion: '2'\nservices:\nweb:\nbuild: .\nports:\n- \"5000:5000\"\nvolumes:\n- .:/code\n- logvolume01:/var/log\nlinks:\n- redis\nredis:\nimage: redis\nvolumes:\n\\end{sourcecode}",elisp:'\\begin{sourcecode}{elisp}{Ejemplo en elisp.}\n(defun my-split-window-func ()\n  (interactive)\n  (split-window-below)\n  (set-window-buffer (next-window) (other-buffer)))\n\n(global-set-key (kbd "C-x 2") #\'my-split-window-func)\n\\end{sourcecode}',elixir:'\\begin{sourcecode}{elixir}{Ejemplo en Elixir.}\n# A comment\ndefmodule Foo do\n\tdef bar(x) do\n\t\tstring = "hello"\n\n\t\tfc = fn x,y -> x + y end \n\t\tatom = fc.(!\\elsymb{:imanatom}!)\n\t\tatom = fc.(!\\elsymb{:because_the_parser_is_not_good_enough}! )\n\tend\nend\n\\end{sourcecode}',
erlang:"\\begin{sourcecode}{erlang}{Ejemplo en erlang.}\n% This is file 'listsort.erl' (the compiler is made this way)\n-module(listsort).\n% Export 'by_length' with 1 parameter (don't care about the type and name)\n-export([by_length/1]).\n\nby_length(Lists) -> % Use 'qsort/2' and provides an anonymous function as a parameter\n   qsort(Lists, fun(A,B) -> length(A) < length(B) end).\n\nqsort([], _)-> []; % If list is empty, return an empty list (ignore the second parameter)\nqsort([Pivot|Rest], Smaller) ->\n    % Partition list with 'Smaller' elements in front of 'Pivot' and not-'Smaller' elements\n    % after 'Pivot' and sort the sublists.\n    qsort([X || X <- Rest, Smaller(X,Pivot)], Smaller)\n    ++ [Pivot] ++\n    qsort([Y || Y <- Rest, not(Smaller(Y, Pivot))], Smaller).\n\\end{sourcecode}",
fortran:"\\begin{sourcecode}{fortran}{Ejemplo en Fortran.}\nREGRESION LINEAL.FORTRANS\nAPLICACION\n     DIMENSION TIEMPO(1000),PROD(1000)\n        OPEN(1,FILE='HISTORIA.txt')\n        I=0\n 10     READ(1,*,END=80)T,P\n        I=I+1\n        TIEMPO(.l.)=T\n        PROD(I)=P\n        GO TO 10\n 80     NDATOS=I\n        CALL AJULIN(TIEMPO,PROD,NDATOS,A,B)\n        WRITE(*,90)A,B\n 90     FORMAT('LA ECUACION ES:Y=',F10.2,'+',F10.2,'X')\n 20     FORMAT(20F10.0)\n        END\n\n\n        SUBROUTINE AJULIN(X,Y,N,A,B)\n         DIMENSION X(1),Y(1)\n          SUMX=0.\n          SUMY=0.\n          SUMX2=0.\n          SUMY2=0\n          SUMXY=0\n        DO 20 I=1,N\n         SUMX=SUMX+X(.l.)\n         SUMY=SUMY+Y(.l.)\n         SUMX2=SUMX2+(X(I)*X(.l.))\n         SUMY2=SUMY2+Y(I)**2\n         SUMXY=SUMXY+(X(I)*Y(I))\n 20    CONTINUE\n        PROD=SUMX*SUMY\n        B=(SUMXY-PROD/N)/(SUMX2-SUMX**2/N)\n        A=(SUMY/N-B*SUMX/N)\n       RETURN\n       END\n\\end{sourcecode}",
fsharp:"\\begin{sourcecode}{fsharp}{Ejemplo en F#.}\n/// Fibonacci Number formula\nlet fib n =\n    let rec g n f0 f1 =\n        match n with\n        | 0 -> f0\n        | 1 -> f1\n        | _ -> g (n - 1) f1 (f0 + f1)\n    g n 0 1\n\n/// Another approach - a lazy infinite sequence of Fibonacci numbers\nlet fibSeq = Seq.unfold (fun (a,b) -> Some(a+b, (b, a+b))) (0,1)\n\n// Print even fibs\n[1 .. 10]\n|> List.map     fib\n|> List.filter  (fun n -> (n % 2) = 0)\n|> printList\n\n// Same thing, using a list expression\n[ for i in 1..10 do\n    let r = fib i\n    if r % 2 = 0 then yield r ]\n|> printList\n\\end{sourcecode}",
glsl:"\\begin{sourcecode}{glsl}{Noise shader.}\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\n// 2D Random\nfloat random (in vec2 st) {\n\treturn fract(sin(dot(st.xy,\n\tvec2(12.9898,78.233)))\n\t* 43758.5453123);\n}\n\n// 2D Noise based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n\tvec2 i = floor(st);\n\tvec2 f = fract(st);\n\t\n\t// Four corners in 2D of a tile\n\tfloat a = random(i);\n\tfloat b = random(i + vec2(1.0, 0.0));\n\tfloat c = random(i + vec2(0.0, 1.0));\n\tfloat d = random(i + vec2(1.0, 1.0));\n\t\n\t// Smooth Interpolation\n\t\n\t// Cubic Hermine Curve.  Same as SmoothStep()\n\tvec2 u = f*f*(3.0-2.0*f);\n\t// u = smoothstep(0.,1.,f);\n\t\n\t// Mix 4 coorners percentages\n\treturn mix(a, b, u.x) +\n\t(c - a)* u.y * (1.0 - u.x) +\n\t(d - b) * u.x * u.y;\n}\n\nvoid main() {\n\tvec2 st = gl_FragCoord.xy/u_resolution.xy;\n\t\n\t// Scale the coordinate system to see\n\t// some noise in action\n\tvec2 pos = vec2(st*5.0);\n\t\n\t// Use the noise function\n\tfloat n = noise(pos);\n\t\n\tgl_FragColor = vec4(vec3(n), 1.0);\n}\n\\end{sourcecode}",
gnuplot:'\\begin{sourcecode}{gnuplot}{Ejemplo en Gnuplot.}\nset terminal epslatex   \nset output \'mplot.tex\'   \nset xlabel "Avg. No. of demand duration (slot) "   \nset ylabel "Acceptence rate (%)"   \nset grid xtics ytics   \nset key right bottom   \n\nset style line 1 lw 1 lc 3 pt 7  \nset style line 2 lw 1 lc 1 pt 5  \nset style line 3 lw 1 lc 0 pt 9  \nset style line 4 lw 1 lc 4 pt 3  \n\nplot "AcceptanceRate_Ser.txt" using 2:4:5:6 title "NoMig" with errorlines linestyle 1,\\ \n     "AcceptanceRate_Ser.txt" using 2:7:8:9 title "FlowMig" with errorlines linestyle 2 ,\\ \n      "AcceptanceRate_Ser.txt" using 2:10:11:12 title "VMMig" with errorlines linestyle 3, \\ \n     "AcceptanceRate_Ser.txt" using 2:13:14:15 title "NoRis" with errorlines linestyle 4\n\\end{sourcecode}',
go:'\\begin{sourcecode}{go}{Ejemplo en Go.}\n// Package main is, tautologically, the main package.\npackage main\n\nimport "fmt"\n\ntype s struct{}\n\nfunc main() {\n\tfmt.Println("Hello, world!")\n}\n\\end{sourcecode}',haskell:"\\begin{sourcecode}{haskell}{Ejemplo en Haskell.}\n-- Type annotation (optional)\nfib :: Int -> Integer\n\n-- With self-referencing data\nfib n = fibs !! n\nwhere fibs = 0 : scanl (+) 1 fibs\n-- 0,1,1,2,3,5,...\n\n-- Same, coded directly\nfib n = fibs !! n\nwhere fibs = 0 : 1 : next fibs\nnext (a : t@(b:_)) = (a+b) : next t\n\n-- Similar idea, using zipWith\nfib n = fibs !! n\nwhere fibs = 0 : 1 : zipWith (+) fibs (tail fibs)\n\n-- Using a generator function\nfib n = fibs (0,1) !! n\nwhere fibs (a,b) = a : fibs (b,a+b)\n\\end{sourcecode}",
html:'\\begin{sourcecode}[\\label{codigo-html}]{html}{Ejemplo en HTML.}\n<!DOCTYPE html>\n<html lang="es">\n<head>\n\t<title>P\u00e1gina</title>\n</head>\n<body>\n\t<style>\n\t\t.titulo {\n\t\t\tcolor: #ff0000;\n\t\t}\n\t</style>\n\t<div class="titulo">Hola</div>\n</body>\n</html>\n\\end{sourcecode}',ini:"\\begin{sourcecode}{ini}{Ejemplo de archivo de configuraci\u00f3n.}\n[anchor_parameters]\n# Sizes should correlate to how the network processes an image.\nsizes   = 32 64 128 256 512\n# Strides should correlate to how the network strides over an image.\nstrides = 8 16 32 64 128\n# The different ratios to use per anchor location.\nratios  = 0.5 1 2 3\n# The different scaling factors to use per anchor location.\nscales  = 1 1.2 1.6\n\\end{sourcecode}",
java:'\\begin{sourcecode}[\\label{codigo-java}]{java}{Ejemplo en Java.}\nimport java.io.IOException; \nimport javax.servlet.*;\n\n// Hola mundo\npublic class Hola extends GenericServlet {\n\tpublic void service(ServletRequest request, ServletResponse response)\n\tthrows ServletException, IOException{\n\t\tresponse.setContentType("text/html");\n\t\tPrintWriter pw = response.getWriter();\n\t\tpw.println("Hola, mundo!");\n\t\tpw.close();\n\t}\n}\n\\end{sourcecode}',javascript:"\\begin{sourcecode}{javascript}{Ejemplo en Javascript.}\n$.urlParam = function (name) {\n\tlet results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n\tif (results == null) {\n\t\treturn null;\n\t} else {\n\t\treturn decodeURI(results[1]) || 0;\n\t}\n};\n\\end{sourcecode}",
json:'\\begin{sourcecode}{json}{Un arreglo en JSON.}\n{"menu": {\n\t"id": "file",\n\t"value": "File",\n\t"popup": {\n\t\t"menuitem": [\n\t\t{"value": "New", "onclick": "CreateNewDoc()"},\n\t\t{"value": "Open", "onclick": "OpenDoc()"},\n\t\t{"value": "Close", "onclick": "CloseDoc()"}\n\t\t]\n\t}\n}}\n\\end{sourcecode}',julia:'\\begin{sourcecode}{julia}{Ejemplo en Julia.}\n#= This is a code sample for the Julia language\n(adapted from http://julialang.org) =#\nfunction mandel(z)\n    c = z\n    maxiter = 80\n    for n = 1:maxiter\n        if abs(z) > 2\n            return n-1\n        end\n        z = z^2 + c\n    end\n    return maxiter\nend\n\nfunction helloworld()\n    println("Hello, World!") # Bye bye, MATLAB!\nend\n\\end{sourcecode}',
kotlin:'\\begin{sourcecode}{kotlin}{Kotlin en acci\u00f3n.}\n/* Block comment */\npackage hello\nimport kotlin.collections.* // line comment\n\n/**\n* Doc comment here for `SomeClass`\n* @see Iterator#next()\n*/\n@Deprecated("Deprecated class")\nprivate class MyClass<out T : Iterable<T>>(var prop1 : Int) {\n\tfun foo(nullable : String?, r : Runnable, f : () -> Int, \n\tfl : FunctionLike, dyn: dynamic) {\n\t\tprintln("length\\nis ${nullable?.length} \\e")\n\t\tval ints = java.util.ArrayList<Int?>(2)\n\t\tints[0] = 102 + f() + fl()\n\t\tval myFun = { -> "" };\n\t\tvar ref = ints.size\n\t\tints.lastIndex + globalCounter\n\t\tints.forEach lit@ {\n\t\t\tif (it == null) return@lit\n\t\t\tprintln(it + ref)\n\t\t}\n\t\tdyn.dynamicCall()\n\t\tdyn.dynamicProp = 5\n\t}\n\t\n\tval test = """hello\n\tworld\n\tkotlin"""\n\toverride fun hashCode(): Int {\n\t\treturn super.hashCode() * 31\n\t}\n}\nfun Int?.bar() {\n\tif (this != null) {\n\t\tprintln(message = toString())\n\t}\n\telse {\n\t\tprintln(this.toString())\n\t}\n}\nvar globalCounter : Int = 5\nget = field\nabstract class Abstract {\n}\nobject Obj\nenum class E { A, B }\ninterface FunctionLike {\n\toperator fun invoke() = 1\n}\n\\end{sourcecode}',
latex:"\\begin{sourcecode}{latex}{Im\u00e1genes m\u00faltiples.}\n\\begin{images}[\\label{imagenmultiple}]{Ejemplo de imagen m\u00faltiple.}\n\t\\addimage{ejemplos/test-image}{width=6.5cm}{Ciudad}\n\t\\addimage{ejemplos/test-image-wrap}{width=5cm}{Apolo}\n\t\\addimage{ejemplos/test-image}{width=12cm}{Ciudad m\u00e1s grande}\n\\end{images}\n\\end{sourcecode}",lisp:"\\begin{sourcecode}[\\label{ex-lisp}]{lisp}{Ejemplo en Lisp.}\n(defun find-symbol-between-sigma-sets (sigma-a sigma-b scan-node symbols g)\n\t(let* ((scan-node-set-in-sigma-a (find-scan-node sigma-a scan-node))\n\t\t   (next-scan-node-set-in-sigma-b \n\t\t\t(get-next-node-set-from-scan-node-set \n\t\t\t scan-node-set-in-sigma-a sigma-b g))\n\t\t   (union-node-set-in-sigma-a \n\t\t\t(get-previous-nodes next-scan-node-set-in-sigma-b g)))\n\t  (if \n\t   (and \n\t\t(memberp union-node-set-in-sigma-a scan-node-set-in-sigma-a)\n\t\t(path-exists-between-set-a-and-set-b \n\t\t union-node-set-in-sigma-a next-scan-node-set-in-sigma-b g))\n\t   (car \n\t\t(unique-get-symbols \n\t\t union-node-set-in-sigma-a next-scan-node-set-in-sigma-b symbols))\n\t   nil)))\n\\end{sourcecode}",
llvm:'\\begin{sourcecode}{llvm}{Ejemplo en LLVM.}\ntarget triple = "x86_64-unknown-linux-gnu"\n\n@s = private constant [13 x i8] c"hello world\\0A\\00"\n\n; main prints "hello world" to standard output.\ndefine i32 @main(i32 %argc, i8** %argv) {\n\t%1 = getelementptr [13 x i8]* @s, i32 0, i32 0\n\tcall i32 (i8*, ...)* @printf(i8* %1)\n\tret i32 0\n}\n\ndeclare i32 @printf(i8*, ...)\n\\end{sourcecode}',lua:'\\begin{sourcecode}{lua}{Ejemplo en Lua.}\n-- defines a factorial function\nfunction fact (n)\n\tif n == 0 then\n\t\treturn 1\n\telse\n\t\treturn n * fact(n-1)\n\tend\nend\n\nprint("enter a number:")\na = io.read("*number")        -- read a number\nprint(fact(a))\n\\end{sourcecode}',
make:"\\begin{sourcecode}[]{make}{Ejemplo en make.}\nall: helloworld variables if_else while_for functions strings pointer\n\nhelloworld:\ng++ 01_helloworld.cpp -o 01_helloworld\n\nvariables:\ng++ 02_variables.cpp -o 02_variables\n\nif_else:\ng++ 03_if_else.cpp -o 03_if_else\n\nwhile_for:\ng++ 04_while_for.cpp -o 04_while_for\n\\end{sourcecode}",maple:"\\begin{sourcecode}{maple}{Ejemplo en Maple.}\nrestart:\nwith(geom3d):\neqS:=Equation(sphere(S,(x-1)^2 + (y-1)^2 +(z-1)^2 -121=0,[x,y,z],'centername'=T)):\nL:=[]:\nfor x from -5 to 10  do\nfor y from -5 to 10  do\nL:=[op(L), [x,y,z]] fi;\nod: od: od: \nnops(L);  \nL;\n\\end{sourcecode}",
mathematica:'\\begin{sourcecode}{mathematica}{Ejemplo en Mathematica.}\nBlock[\n {region=DiscretizeRegion[Polygon[{{0,0},{-1/2,Sqrt[3]/2},{1/2,Sqrt[3]/2}}]]},\n ContourPlot[\n  2 Cos[4 Pi x] Sin[(4 Pi y)/Sqrt[3]] - Sin[(8 Pi y)/Sqrt[3]],\n  {x,y} %*$\\in$*) region,\n  PlotPoints ->70,\n  Contours ->10,\n  AspectRatio ->Automatic,\n  FrameLabel ->{"x","y"},\n  PlotLabel ->"Excited state of the equilateral triangle"\n ]\n]\n\\end{sourcecode}',matlab:"\\begin{sourcecode}[\\label{codigo-matlab}]{matlab}{Ejemplo en Matlab.}\n% Se crea gr\u00e1fico\nf = figure(1);\nhold on;\nmovegui(f, 'center');\nxlabel('td/Tn'); ylabel('FAD=Umax/Uf0');\ntitle('Espectro de pulso de desplazamiento');\n\nfor j = 1:length(BETA)\n\tfad = ones(1, NDATOS); % Arreglo para el FAD, uno para cada r\n\tfor i = 1:NDATOS\n\t\t[t, u_t, ~, ~] = main(BETA(j), r(i), M, K, F0, 0);\n\t\tfad(i) = max(abs(u_t)) / uf0;\n\tend\nmx = find(fad == max(fad(:)));\nfprintf('BETA=%.2f, MAX: FAD=%.3f, TD/TN=%.3f\\n', BETA(j), fad(mx), tdtn(mx));\nplot(tdtn, fad, 'DisplayName', strcat('\\beta=', sprintf('%.2f', BETA(j))));\nend\t\n\\end{sourcecode}",
mercury:'\\begin{sourcecode}{mercury}{Ejemplo en Mercury.}\n :- module fib.\n :- interface.\n :- import_module io.\n :- pred main(io::di, io::uo) is det.\n \n :- implementation.\n :- import_module int.\n\n :- func fib(int) = int.\n fib(N) = (if N =< 2 then 1 else fib(N - 1) + fib(N - 2)).\n\n main(!IO) :-\n        io.write_string("fib(10) = ", !IO),\n        io.write_int(fib(10), !IO),\n        io.nl(!IO).\n        % Could instead use io.format("fib(10) = %d\\n", [i(fib(10))], !IO).\n\\end{sourcecode}',
modula2:"\\begin{sourcecode}{modula2}{Ejemplo en Modula-2.}\ntype Day_type   is range    1 ..   31;\ntype Month_type is range    1 ..   12;\ntype Year_type  is range 1800 .. 2100;\ntype Hours is mod 24;\ntype Weekday is (Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday);\n\ntype Date is\n   record\n     Day   : Day_type;\n     Month : Month_type;\n     Year  : Year_type;\n   end record;\n\\end{sourcecode}",objectivec:'\\begin{sourcecode}{objectivec}{Ejemplo en Objective-C.}\n#import "Forwarder.h"\n\n@implementation Forwarder\n- (retval_t)forward:(SEL)sel args:(arglist_t)args {\n  /*\n  * Check whether the recipient actually responds to the message.\n  * This may or may not be desirable, for example, if a recipient\n  * in turn does not respond to the message, it might do forwarding\n  * itself.\n  */\n  if ([recipient respondsToSelector:sel]) {\n    return [recipient performv:sel args:args];\n  } else {\n    return [self error:"Recipient does not respond"];\n  }\n}\n\n- (id)setRecipient:(id)_recipient {\n  [recipient autorelease];\n  recipient = [_recipient retain];\n  return self;\n}\n\n- (id)recipient {\n  return recipient;\n}\n@end\n\\end{sourcecode}',
octave:"\\begin{sourcecode}{octave}{Ejemplo en Octave.}\nfunction out = invar_table(n,m,N)\nif n>m, error('first number must be smaller than the second'), endif\n\nt = cputime;\nout = zeros(m-n+1,2);\n\nfor i=n:m\n  out(i+1-n,1) = i;\n  out(i+1-n,2) = invar(braidmatrix(i),N);\nend\n\nprintf('Total CPU time: %f seconds\\n', cputime-t);\nend\n\\end{sourcecode}",opencl:"\\begin{sourcecode}[\\label{test-opencl}]{opencl}{Ejemplito OpenCL.}\n__kernel void vector_add(__global const int *A, __global const int *B, __global int *C) {\n\n    // Get the index of the current element to be processed\n    int i = get_global_id(0);\n\n    // Do the operation\n    C[i] = A[i] + B[i];\n}\n\\end{sourcecode}",
opensees:"\\begin{sourcecode}[\\label{programa-opensees}]{opensees}{Estructura en OpenSees.}\n# Remove existing model\nwipe\n\n# Create ModelBuilder (with two-dimensions and 2 DOF/node)\nmodel BasicBuilder -ndm 2 -ndf 2\n\n# Create nodes\n# ------------\n# Create nodes & add to Domain - command: node nodeId xCrd yCrd\nnode 1   0.0  0.0\nnode 2 144.0  0.0\nnode 3 168.0  0.0\nnode 4  72.0 96.0\n    \n# Set the boundary conditions - command: fix nodeID xResrnt? yRestrnt?\nfix 1 1 1 \nfix 2 1 1\nfix 3 1 1\n    \n# Define materials for truss elements\n# -----------------------------------\n# Create Elastic material prototype - command: uniaxialMaterial Elastic matID E\nuniaxialMaterial Elastic 1 3000\n\n# \n# Define elements\n#\n\n# Create truss elements - command: element truss trussID node1 node2 A matID\nelement Truss 1 1 4 10.0 1\nelement Truss 2 2 4 5.0 1\nelement Truss 3 3 4 5.0 1\n        \n# Define loads\n# ------------\n#\n\n# create a Linear TimeSeries with a tag of 1\ntimeSeries Linear 1\n    \n# Create a Plain load pattern associated with the TimeSeries,\n# command: pattern Plain $patternTag $timeSeriesTag { load commands }\n\npattern Plain 1 1 {\n\t\n   # Create the nodal load - command: load nodeID xForce yForce\n   load 4 100 -50\n}\n\\end{sourcecode}",
pascal:"\\begin{sourcecode}{pascal}{Ejemplo pascal.}\nPROGRAM NotasDeAlumnos;\nuses crt;\nType\nvecalumnos = array [1..40] of string;\nvar\nNombre, Apellido: vecalumnos;\nNota: array [1..40] of real;\nBegin\nclrscr; /*Limpia pantalla*/\nFor i:= 1 to 40 do\n\tbegin\n\t\twrite('Ingrese Nombre: ');\n\t\treadln(Nombre[i]);\n\t\twrite('Ingrese Apellido: ');\n\t\treadln(Apellido[i]);\n\t\twrite('Ingrese Nota: ');\n\t\treadln(Nota[i]);\n\tend;\nFor i:= 1 to 40 do\n\tbegin\n\t\twrite(Nombre[i], ' ',Apellido[i]);\n\t\tif (Nota[i] >=7) then\n\t\t\twriteln(' aprob\u00f3')\n\t\telse\n\t\t\twriteln(' no aprob\u00f3');\n\tend;\nwriteln('');\nWrite ('Pulse [Intro] para finalizar...');\nReadln\nend.\n\\end{sourcecode}",
perl:"\\begin{sourcecode}[\\label{ejemplito-perl}]{perl}{Algo de perl.}\n#!/usr/bin/perl\nuse strict;\nuse warnings;\n\n# first, create your message\nuse Email::MIME;\nmy $message = Email::MIME->create(\n  header_str => [\n    From    => 'you@example.com',\n    To      => 'friend@example.com',\n    Subject => 'Happy birthday!',\n  ],\n  attributes => {\n    encoding => 'quoted-printable',\n    charset  => 'ISO-8859-1',\n  },\n  body_str => \"Happy birthday to you!\\n\",\n);\n\n# send the message\nuse Email::Sender::Simple qw(sendmail);\nsendmail($message);\n\\end{sourcecode}",
php:'\\begin{sourcecode}{php}{Ejemplo php.}\n<?php\n$target_dir = "uploads/";\n$target_file = $target_dir . basename($_FILES["fileToUpload"]["name"]);\n$uploadOk = 1;\n$imageFileType = strtolower(pathinfo($target_file,PATHINFO_EXTENSION));\n// Check if image file is a actual image or fake image\nif(isset($_POST["submit"])) {\n    $check = getimagesize($_FILES["fileToUpload"]["tmp_name"]);\n    if($check !== false) {\n        echo "File is an image - " . $check["mime"] . ".";\n        $uploadOk = 1;\n    } else {\n        echo "File is not an image.";\n        $uploadOk = 0;\n    }\n}\n?>\n\\end{sourcecode}',
plaintext:"\\begin{sourcecode}{plaintext}{Resultado del an\u00e1lisis con TEFAME.}\nTEFAME - Toolbox para Elemento Finitos y Analisis\nMatricial de Estructuras en MATLAB\n\nPropiedades de entrada modelo:\n\nNodos: \nNumero de nodos: 4 \nCoordenadas nodo N1: 0 0\nCoordenadas nodo N2: 800 0\nCoordenadas nodo N3: 400 400\nCoordenadas nodo N4: 400 800\n\nElementos: \nNumero de elementos: 6 \nElemento E1:\tLargo: 800         Area: 20        Eo: 200000    \nElemento E2:\tLargo: 565.6854    Area: 20        Eo: 200000    \nElemento E3:\tLargo: 565.6854    Area: 20        Eo: 200000    \nElemento E4:\tLargo: 894.4272    Area: 20        Eo: 200000    \nElemento E5:\tLargo: 400         Area: 20        Eo: 200000    \nElemento E6:\tLargo: 894.4272    Area: 20        Eo: 200000    \n\nResultados del analisis:\n\nDesplazamientos nodos: \nDesplazamientos nodo N1: 0 0\nDesplazamientos nodo N2: 0.016 0\nDesplazamientos nodo N3: 0.008 -0.013\nDesplazamientos nodo N4: 0.053 -0.016\n\nReacciones: \nReacciones nodo N1: -80 -20\nReacciones nodo N2: 0 140\nReacciones nodo N3: 0 0\nReacciones nodo N4: 0 0\n\nEsfuerzos Elementos: \nElemento E1: -78.4273       TRACCION\nElemento E2: 23.836         COMPRESION\nElemento E3: 23.836         COMPRESION\nElemento E4: -41.2047       TRACCION\nElemento E5: 33.7093        COMPRESION\nElemento E6: 137.6807       COMPRESION\n\\end{sourcecode}",
postscript:"\\begin{sourcecode}{postscript}{Ejemplo en PostScript.}\n%!PS\n /Courier             % name the desired font\n 20 selectfont        % choose the size in points and establish \n                      % the font as the current one\n 72 500 moveto        % position the current point at \n                      % coordinates 72, 500 (the origin is at the \n                      % lower-left corner of the page)\n (Hello world!) show  % stroke the text in parentheses\n showpage             % print all on the page\n\\end{sourcecode}",
powershell:'\\begin{sourcecode}{powershell}{Ejemplo en Powershell.}\n# comment\n\n<#\nmulti\nline\ncomment\n#>\n\n$tmp = \'string\'\n$tmp = "string"\n\n$tmp = @\'\nmutli\n"line"\nstrings\n\'@\n\n$tmp = @"\nmulti\n\'line\'\nstrings\n"@\n\nIf (1 -lt 2) { Write-Output "Hello World!" }\n\\end{sourcecode}',prolog:"\\begin{sourcecode}{prolog}{Ejemplo en prolog.}\nsomePredicate(_, B) :-\n    arbitraryPredicate(A, _variable, 1, 2),\n    predicateWithAtom(someAtom),\n    anotherPredicate(B, someAtom, myPredicate(A, _)),\n    findall(X, ('testString'(X), myPredicate(A, X)), L1),\n    member(A, L1),\n    !.\n    /*\n    block comment: blah blah blah\n    */\n    % to-end-of-line comment: blah blah blah\n\\end{sourcecode}",
promela:"\\begin{sourcecode}{promela}{Ejemplo promela.}\nmtype = {M_UP, M_DW};\nchan Chan_data_down = [0] of {mtype};\nchan Chan_data_up   = [0] of {mtype};\nproctype P1 (chan Chan_data_in, Chan_data_out)\n{\n    do\n    ::  Chan_data_in  ? M_UP -> skip;\n    ::  Chan_data_out ! M_DW -> skip;\n    od;\n};\nproctype P2 (chan Chan_data_in, Chan_data_out)\n{\n    do\n    ::  Chan_data_in  ? M_DW -> skip;\n    ::  Chan_data_out ! M_UP -> skip;\n    od;\n};\ninit\n{\n    atomic\n    {\n        run P1 (Chan_data_up,   Chan_data_down);\n        run P2 (Chan_data_down, Chan_data_up);\n    }\n}\n\\end{sourcecode}",
pseudocode:"\\begin{sourcecode}{pseudocode}{Algoritmo.}\ninput: int N, int D\noutput: int\nbegin\n\tres $\\gets$ 0\n\twhile N $\\geq$ D \n\t\tN $\\gets$ N - D\n\t\tres $\\gets$ res + 1      \n\tend\n\treturn res\nend    \n\\end{sourcecode}",pseudocodecolor:"\\begin{sourcecode}{pseudocodecolor}{Algoritmo con fondo de color.}\ninput: int N, int D\noutput: int\nbegin\n\tres $\\gets$ 0\n\twhile N $\\geq$ D \n\t\tN $\\gets$ N - D\n\t\tres $\\gets$ res + 1      \n\tend\n\treturn res\nend    \n\\end{sourcecode}",
python:"\\begin{sourcecode}[\\label{codigo-python}]{python}{Ejemplo en Python.}\nimport numpy as np\n\ndef incmatrix(genl1, genl2):\nm = len(genl1)\nn = len(genl2)\nM = None # Comentario 1\nVT = np.zeros((n*m, 1), int) # Comentario 2\n\\end{sourcecode}",qsharp:"\\begin{sourcecode}{qsharp}{Ejemplo en Q#.}\nnamespace Example {\n\topen Microsoft.Quantum.Intrinsic;\n\n\t/// # Summary\n\t/// Prepares $(\\ket{00} + \\ket{11}) / \\sqrt{2}$.\n\toperation PrepareEntangledPair(left : Qubit, right : Qubit) : Unit\n\t\tis Adj + Ctl {\n\t\t\tH(left);\n\t\t\tCNOT(left, right);\n\t\t}\n}\n\\end{sourcecode}",
r:"\\begin{sourcecode}{r}{Ejemplo en r.}\n# Genera una correlacion de los generos con todas sus variables\ncorr_data_genre <- function(data, genre) {\n\tnum_genre <- data[data$genre == genre, -c(1:4)]\n\tcorr_genre <- cor(num_genre)\n}\n\\end{sourcecode}",racket:'\\begin{sourcecode}{racket}{Ejemplo en Racket.}\n#lang racket/gui\n\n;; let\'s play a guessing game\n\n(define frame (new frame% [label "Guess"]))\n\n(define secret (random 5))\n(define ((check i) btn evt)\n  (define found? (if (= i secret) "Yes" "No"))\n  (message-box "?" found?)\n  (when (= i secret)\n    (send frame show #false)))\n\n(for ([i (in-range 5)])\n   (new button%\n        [label (~a i)]\n        [parent frame]\n        [callback (check i)]))\n\n(send frame show #t)\n\\end{sourcecode}',
reil:"\\begin{sourcecode}{reil}{Ejemplo en REIL.}\nbisz t8, , ZF\nstr t8, , esp\nldm 16815620, , t0\nstr t0, , eax\nsub esp, 4, esp\nand esp, 4294967295, esp\nstm esi, , esp\nsub esp, 4, esp\nand esp, 4294967295, esp\nstm t2, , esp\nadd -4, ebp, t0\nand t0, 4294967295, t1\nstm eax, , t1\nsub esp, 4, t0\nand t0, 4294967295, esp\nstm 16805479, , esp\njcc 1, , 16805367\n\\end{sourcecode}",ruby:"\\begin{sourcecode}[]{ruby}{Ejemplo con ruby.}\nclass DataFile < ActiveRecord::Base\n    attr_accessor :upload\n\n  def self.save_file(upload)   \n\n    file_name = upload['datafile'].original_filename  if  (upload['datafile'] !='')    \n    file = upload['datafile'].read    \n\n    file_type = file_name.split('.').last\n    new_name_file = Time.now.to_i\n    name_folder = new_name_file\n    new_file_name_with_type = \"#{new_name_file}.\" + file_type\n\n    image_root = \"#{RAILS_CAR_IMAGES}\"\n\n\n    Dir.mkdir(image_root + \"#{name_folder}\");\n      File.open(image_root + \"#{name_folder}/\" + new_file_name_with_type, \"wb\")  do |f|  \n        f.write(file) \n      end\n\n  end\nend\n\\end{sourcecode}",
rust:"\\begin{sourcecode}{rust}{Ejemplo en Rust.}\nuse std::rc::Rc;\n\n/// upside-down tree with a designated position (the *stack pointer*)\n/// and *nodes* of type `A`.\n#[derive(Clone, Debug)]\npub struct TreeStack<A> {\n\tparent: Option<(usize, Rc<TreeStack<A>>)>,\n\tvalue: A,\n\tchildren: Vec<Option<Rc<TreeStack<A>>>>,\n}\n\nimpl<A> TreeStack<A> {\n\t/// Creates a new `TreeStack<A>` with root label `a`.\n\tpub fn new(a: A) -> Self {\n\t\tTreeStack { value: a, children: Vec::new(), parent: None }\n\t}\n\t\n\t/// Applies a function `FnMut(&A) -> B` to every node in a `TreeStack<A>`.\n\tpub fn map<F, B>(&self, f: &mut F) -> TreeStack<B>\n\twhere F: FnMut(&A) -> B,\n\t{\n\t\tlet new_value = f(&self.value);\n\t\tlet new_parent = match self.parent {\n\t\t\tSome((i, ref p)) => Some((i, Rc::new(p.map(f)))),\n\t\t\tNone => None,\n\t\t};\n\t\tlet new_children = self.children\n\t\t.iter()\n\t\t.map(|o| o.clone().map(|v| Rc::new(v.map(f))))\n\t\t.collect();\n\t\tTreeStack {\n\t\t\tparent: new_parent,\n\t\t\tvalue: new_value,\n\t\t\tchildren: new_children\n\t\t}\n\t}\n}\n\\end{sourcecode}",
scala:'\\begin{sourcecode}{scala}{C\u00f3digo en scala.}\nobject Test {\n\tdef main(args: Array[String]) {\n\t\tvar a = 0;\n\t\t// for loop execution with a range\n\t\tfor( a <- 1 to 10){\n\t\t\tprintln( "Value of a: " + a );\n\t\t}\n\t}\n}\n\\end{sourcecode}',scheme:"\\begin{sourcecode}{scheme}{Ejemplo en Scheme.}\n;;; If the next character on p is a letter, get-word reads a word\n;;; from p and returns it in a string.  If the character is not a\n;;; letter, get-word returns the character (on eof, the eof-object).\n(define get-word\n\t(lambda (p)\n\t(let ((c (read-char p)))\n\t\t(if (eq? (char-type c) 'letter)\n\t\t\t(list->string\n\t\t\t(let loop ((c c))\n\t\t\t\t(cons c\n\t\t\t\t(if (memq (char-type (peek-char p)) '(letter digit))\n\t\t\t\t\t(loop (read-char p))\n\t\t\t\t\t'()))))\n\t\t\tc))))\n\\end{sourcecode}",
scilab:"\\begin{sourcecode}{scilab}{Ejemplo en scilab.}\nfunction y = f(x)\n\ty = 1/sqrt(2*\\%pi) * exp(-x^2/2)\nendfunction\n\n// A simple plot of z = f(x,y)\nt=[0:0.3:2*%pi]';\nz=sin(t) * cos(t');\nplot3d(t, t', z)\n\\end{sourcecode}",simula:"\\begin{sourcecode}{simula}{Ejemplo en simula.}\nReal Procedure Sigma (k, m, n, u);\n   Name k, u;\n   Integer k, m, n; Real u;\nBegin\n   Real s;\n   k:= m;\n   While k <= n Do Begin s:= s + u; k:= k + 1; End;\n   Sigma:= s;\nEnd;\n\\end{sourcecode}",sparql:"\\begin{sourcecode}{sparql}{Ejemplo en SPARQL.}\nPREFIX ex: <https://example.com/exampleOntology#>\nSELECT ?capital\n       ?country\nWHERE\n  {\n    ?x  ex:cityname       ?capital   ;\n        ex:isCapitalOf    ?y         .\n    ?y  ex:countryname    ?country   ;\n        ex:isInContinent  ex:Africa  .\n  }\n\\end{sourcecode}",
sql:"\\begin{sourcecode}{sql}{Merge two tables in SQL.}\nSELECT ChargeNum, CategoryID, SUM(Hours)\nFROM KnownHours\nGROUP BY ChargeNum, CategoryID\nUNION ALL\nSELECT ChargeNum, 'Unknown' AS CategoryID, SUM(Hours)\nFROM UnknownHours\nGROUP BY ChargeNum\n\\end{sourcecode}",swift:"\\begin{sourcecode}{swift}{Ejemplo en Swift.}\n// This function passes the result of the first closure or function.\nfunc b(closure a: () -> Int, anotherClosure: (Int) -> Int) -> Int {\n    return anotherClosure(a())\n}\n\n// With no trailing closures\na(closure: {return 1}, anotherClosure: {x in return x + 1})\n\n// With 1 trailing closure\na(closure: {return 1}) {x in return x + 1})\n\n// With 2 trailing closures\na {return 1} anotherClosure: {x in return x + 1}\n\\end{sourcecode}",
tcl:'\\begin{sourcecode}[\\label{ejemplo-tcl}]{tcl}{C\u00f3digo en TCL.}\nproc file\'hexdump filename {\n   set fp [open $filename]\n   fconfigure $fp -translation binary\n   set n 0\n   while {![eof $fp]} {\n       set bytes [read $fp 16]\n       regsub -all {[^ -p]} $bytes . ascii\n       puts [format "%04X %-48s %-16s" $n [hexdump $bytes] $ascii]\n       incr n 16\n   }\n   close $fp\n}\n\nproc hexdump string {\n   binary scan $string H* hex\n   regexp -all -inline .. $hex\n}\n\\end{sourcecode}',
vbscript:"\\begin{sourcecode}{vbscript}{Ejemplo en Visual Basic.}\nOption Explicit\n\nSub Signal(strSignalfolge As String, Optional lngTakt As Long = 100)\n'Prozedur erzeugt eine Serie von Warnt\u00f6nen.\n'Die optionale Variable lngTakt gibt den Takt in Millisekunden vor (Standard: 100 ms)\n'Das Muster kann \u00fcber die String-Variable strSignalfolge beeinflusst werden:\n' Stern (*)     -> 1 Warnton\n' Ziffern 1..9  -> 1..9 Takte Pause\n' Leerzeichen   -> 1 Sekunde Pause\n' Minus (-)     -> 1.5 Sekunden Pause\n    Dim i As Integer\n    Dim b As String\n    For i = 1 To Len(strSignalfolge)\n        b = Mid(strSignalfolge, i, 1)\n        Select Case b\n            Case \"*\": beep\n            Case 1 To 9: DELAY CInt(b) * lngTakt\n            Case \" \": DELAY 1000\n            Case \"-\": DELAY 1500\n        End Select\n        DELAY lngTakt\n    Next i\n\nEnd Sub\n\nPublic Function strParse(Data As String, Trenn As String, Nr As Integer)\n'Funktion trennt die Zeichenkette <Data>\n    On Error Resume Next\n    Dim MainData() As String, SplitData() As String\n    MainData = Split(Data, Trenn)\n    SplitData = Split(MainData(Nr - 1), Trenn)\n    strParse = SplitData(0)\nEnd Function\n\\end{sourcecode}",
verilog:"\\begin{sourcecode}{verilog}{Ejemplo en Verilog.}\nmodule Mixing {\n\t///////// ADC /////////\n\tinout              ADC_CS_N,\n\toutput             ADC_DIN,\n\tinput              ADC_DOUT,\n\toutput             ADC_SCLK,\n\t\n\t///////// ADC /////////\n\tinput              AUD_ADCDAT,\n\tinout              AUD_ADCLRCK,\n\tinout              AUD_BCLK,\n\toutput             AUD_DACDAT,\n\tinout              AUD_DACLRCK,\n\toutput             AUD_XCK,\n\t\n\t///////// clocks /////////\n\tinput              clock2_50,\n\tinput              clock3_50,\n\tinput              clock4_50,\n\tinput              clock_50,\n\t\n\t///////// HEX /////////\n\toutput      [6:0]  HEX0,\n\toutput      [6:0]  HEX1,\n\toutput      [6:0]  HEX2,\n\toutput      [6:0]  HEX3,\n\toutput      [6:0]  HEX4,\n\toutput      [6:0]  HEX5,\n\t\n\t///////// FOO /////////\n\toutput      [2]    FOO,\n}\n\\end{sourcecode}",
vhdl:"\\begin{sourcecode}{vhdl}{Ejemplo en VHDL.}\n-- (this is a VHDL comment)\n\n-- import std_logic from the IEEE library\nlibrary IEEE;\nuse IEEE.std_logic_1164.all;\n\n-- this is the entity\nentity ANDGATE is\n\tport (\n\t\tI1 : in std_logic;\n\t\tI2 : in std_logic;\n\t\tO  : out std_logic);\nend entity ANDGATE;\n\n-- this is the architecture\narchitecture RTL of ANDGATE is\nbegin\n\tO <= I1 and I2;\nend architecture RTL;\n\\end{sourcecode}",xml:'\\begin{sourcecode}{xml}{Ejemplos con xml.}\n<?xml version="1.0" encoding="utf-8"?>\n<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"\n   xmlns:xs="http://www.w3.org/2001/XMLSchema">\n  <xs:element name="points">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element maxOccurs="unbounded" name="point">\n          <xs:complexType>\n            <xs:attribute name="x" type="xs:unsignedShort" use="required" />\n            <xs:attribute name="y" type="xs:unsignedShort" use="required" />\n          </xs:complexType>\n        </xs:element>\n      </xs:sequence>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n\\end{sourcecode}'};
function afterDocumentReady(){$(".intro-line-abstract").each(function(){$(this).attr("style","cursor:pointer;");$(this).html(String.format("(l\u00ednea {0})",line_abstract[0]))});$(".intro-line-authortable").each(function(){$(this).attr("style","cursor:pointer;");$(this).html(String.format("(l\u00ednea {0})",line_authortable[0]))});$(".intro-line-docinit").each(function(){$(this).attr("style","cursor:pointer;");$(this).html(String.format("(l\u00ednea {0})",line_docinit[0]))});$(".intro-line-infodocument").each(function(){$(this).attr("style",
"cursor:pointer;");$(this).html(String.format("(l\u00ednea {0})",line_infodocument[0]))});hfGallery=function(){var c=document.querySelectorAll(".pswp")[0];let d=[];for(let a=1;a<=totalHfStyles;a+=1)d.push({src:String.format("res/images/hf{0}.png",a),w:544,h:704,title:String.format('<b>Header-Footer estilo {0}</b> (<div class="codegallerytitle">\\hfstyle={style{0}}</div>)',a)});c=new PhotoSwipe(c,PhotoSwipeUI_Default,d,{counterEl:!0,fullscreenEl:!1,hideAnimationDuration:400,history:!0,index:0,shareEl:!1,
showAnimationDuration:400,zoomEl:!1});c.listen("close",function(){backToTop.show(!0)});backToTop.hide(!0);NotificationJS.clearall();c.init()};var b=$("#hfTrigger");b.on("click",hfGallery);b.html(String.format("{0} estilos distintos",totalHfStyles));portraitGallery=function(){var c=document.querySelectorAll(".pswp")[0];let d=[],a;for(let e=1;e<=totalPortraitStyles;e+=1)a="",void 0!==portraitRequiresAdditional[e]&&(a='<br>Configuraciones adicionales: <div class="codegallerytitle">'+portraitRequiresAdditional[e]+
"</div>"),d.push({src:String.format("res/images/portada{0}.png",e),w:544,h:704,title:String.format('<b>Portada estilo {0}</b> (<div class="codegallerytitle">\\portraitstyle={style{0}}</div>){1}',e,a)});c=new PhotoSwipe(c,PhotoSwipeUI_Default,d,{counterEl:!0,fullscreenEl:!1,hideAnimationDuration:400,history:!0,index:0,shareEl:!1,showAnimationDuration:400,zoomEl:!1});c.listen("close",function(){backToTop.show(!0)});backToTop.hide(!0);NotificationJS.clearall();c.init()};b=$("#portraitTrigger");b.on("click",
portraitGallery);b.html(String.format("{0} estilos distintos",totalPortraitStyles));b=$.urlParam("action");if(null!=b)switch(b){case "portraitGallery":portraitGallery();break;case "hfGallery":hfGallery()}let f=function(c,d,a,e){d=$(d);d.attr("show","off");""!==a&&$(c).html(a);$(c).on("click",function(){"off"===d.attr("show")?(d.fadeIn(),d.attr("show","on"),""!==e&&$(c).html(e)):(d.fadeOut(),d.attr("show","off"),""!==a&&$(c).html(a))})};b=function(c,d){f(c,d,"","")};b("#showAnimatedImageLink","#showAnimatedImageContainer");
b("#showAddImageAnimated","#showAddImageAnimatedContainer");b("#showImageLink","#showImageLinkContainer");b("#showImageAnumLink","#showImageAnumLinkContainer");b("#showCodeImageMc","#showCodeImageMcContainer");b("#showCodeBeginImageMc","#showCodeBeginImageMcContainer");b("#showCodeImageLeft","#codeImageLeftContainer");b("#showCodeImageRight","#codeImageRightContainer");b("#showCodeGatherEqn","#codeGatherEqnContainer");b("#showCodeAlignEqn","#codeAlignEqnContainer");f("#showImagesContainer","#dptoImagesContainer",
"Mostrar im\u00e1genes disponibles","Ocultar im\u00e1genes disponibles");$("#totalLibCount").html($("#usedLibs").find("li").length);f("#showLibsContainer","#libsUsedContainer","Mostrar lista de librer\u00edas utilizadas","Ocultar lista de librer\u00edas");$("#mathFunCounter").html($("#mathFunContainer").find("li").length);f("#showMathFunContainer","#mathFunContainer","Mostrar lista de funciones","Ocultar lista de funciones");$("#TemplateConfigCounter").html($("#templateConfigsList").find(".config-elem").length);
let h=function(c){let d=$("#sourcecode-example");d.empty();let a=cmd_sourcecode[c];a=a.replace(/&/g,"&amp;");a=a.replace(/>/g,"&gt;");a=a.replace(/</g,"&lt;");a=a.replace("\\begin{sourcecode}[",'<span class="pl-c1">\\begin</span><b>{</b><span class="pl-e">sourcecode</span><b>}[</b>');a=a.replace("\\begin{sourcecode}{",'<span class="pl-c1">\\begin</span><b>{</b><span class="pl-e">sourcecode</span><b>}{</b>');a=a.replace("\\label{",'<span class="pl-c1">\\label</span>{');a=a.replace("<b>[</b>]","<b>[</b><b>]</b>");
a=a.replace("}]","}<b>]</b>");a=a.replace("<b>]</b>{","<b>]</b><b>{</b>");a=a.replace("}{","<b>}</b><b>{</b>");a=a.replace("}{","<b>}</b><b>{</b>");a=a.replace("]{","<b>]</b><b>{</b>");a=a.replace("{}",'<b>{</b><b>}</b><span class="pl-srccode">');a=a.replace(".}",'.<b>}</b><span class="pl-srccode">');a=a.replace("\\end{sourcecode}",'</span><span class="pl-c1">\\end</span><b>{</b><span class="pl-e">sourcecode</span><b>}</b>');a=a.replace("<b>{</b>}","<b>{</b><b>}</b>");d.append(a);""!==lastClickedSourcecode&&
$(lastClickedSourcecode).removeClass("sourcecodeTriggerEnabled");lastClickedSourcecode="#sourcecode-"+c;$(lastClickedSourcecode).addClass("sourcecodeTriggerEnabled")};$("body").find(".sourcecodel").each(function(){let c=$(this).html();$(this).attr("id","sourcecode-"+$(this).html());$(this).on("click",function(){h(c)})});b=$.urlParam("srctype");null!==b&&-1!==Object.keys(cmd_sourcecode).indexOf(b)?h(b):h(pickRandomProperty(cmd_sourcecode));$("#example-appdata").tooltipster({animation:"grow",content:'<img src="res/images/ejemplo-appdata.PNG" alt="" width="300" height="165" />',
contentAsHTML:!0,maxWidth:300,side:"bottom",theme:"tooltipster-borderless"});$("#example-plugin-config").tooltipster({animation:"grow",content:'<img src="res/images/ejemplo-config.PNG" alt="" width="500" height="327" />',contentAsHTML:!0,maxWidth:500,side:"bottom",theme:"tooltipster-borderless"});$(".fontsrc").each(function(){let c=$(this).attr("href");if(-1!==c.indexOf("https://tug.org/")){let d=c.split("/")[4];d=c+d+"-1.svg";$(this).tooltipster({animation:"grow",content:String.format('<img src="{0}" alt="" width="500" height="125" class="imgfontexample" />',
d),contentAsHTML:!0,delay:1200,interactive:!0,maxWidth:500,side:"bottom",theme:"tooltipster-borderless"})}});b=function(c,d){c=$("#"+c).after();let a=generateID();c.after(String.format('<div class="codeExampleContainer" id="{0}"></div>',a));let e=generateID();c.after(String.format('<div class="preExampleButton noselect" id="{0}" data-status="hidden" data-write="false">Mostrar ejemplo</div>',e));$("#"+e).on("click",function(){let g=$("#"+e),k=$("#"+a);"false"===g.attr("data-write")&&(k.html(d),g.attr("data-write",
"true"));"hidden"===g.attr("data-status")?(g.attr("data-status","open"),g.html("Ocultar ejemplo"),k.show()):(g.attr("data-status","hidden"),g.html("Mostrar ejemplo"),k.hide())})};b("insertimage-example-trigger",'<img src="res/images/ex-insertimage.PNG" alt="" class="imageCodeExample imageCodeExample-large" />');b("insertimageboxed-example-trigger",'<img src="res/images/ex-insertimageboxed.PNG" alt="" class="imageCodeExample imageCodeExample-tiny" />');b("images-example-trigger",'<img src="res/images/ex-images.PNG" alt="" class="imageCodeExample imageCodeExample-large" />');
b("insertanimatedimage-example-trigger",'<img src="res/images/ex_animated.gif" alt="" class="imageCodeExample imageCodeExample-large" />');b("insertanimatedimageboxed-example-trigger",'<img src="res/images/ex_animated_boxed.gif" alt="" class="imageCodeExample imageCodeExample-large" />');b("example-sourcecodep",'<img src="res/images/ex-sourcecodep.PNG" alt="" class="imageCodeExample" />');b("example-anexos",'<img src="res/images/ex-anexos.PNG" alt="" class="imageCodeExample imageCodeExample-large" />');
b("example-references",'<img src="res/images/ex-referencias.PNG" alt="" class="imageCodeExample" />');b("table-style-c",'<img src="res/images/tabla_c.PNG" alt="" class="imageCodeExample" />');b("table-style-l",'<img src="res/images/tabla_l.PNG" alt="" class="imageCodeExample" />');b("table-style-r",'<img src="res/images/tabla_r.PNG" alt="" class="imageCodeExample" />');b("multicol-createwocolumn",'<img src="res/images/column_two_normal.PNG" alt="" class="imageCodeExample" />');b("multicol-createwocolumn-cfg1",
'<img src="res/images/column_two_normal_cfg1.PNG" alt="" class="imageCodeExample" />');b("multicol-createwocolumn-cfg2",'<img src="res/images/column_two_normal_cfg2.PNG" alt="" class="imageCodeExample" />');b("multicol-createthreecolumn",'<img src="res/images/column_three_normal.PNG" alt="" class="imageCodeExample" />')}
function afterJSONLoad(){let b=$.urlParam("action");if(null!=b)switch(b){case "download":$("a[name*=leanModal]").leanModal({closeButton:".modal_close"}).click();break;case "download-normal":$("#download-button")[0].click()}}
function writeOtherLinks(b){let f=[["\u00c1rea de Humanidades","adh"],["Departamento de Astronom\u00eda","das"],["Departamento de Ciencias de la Computaci\u00f3n","dcc"],["Departamento de F\u00edsica","dfi"],["Departamento de Geof\u00edsica","dgf"],["Departamento de Geolog\u00eda","geo"],["Departamento de Ingenier\u00eda Civil","dic"],["Departamento de Ingenier\u00eda El\u00e9ctrica","die"],["Departamento de Ingenier\u00eda En Minas","minas"],["Departamento de Ingenier\u00eda Industrial","dii"],["Departamento de Ingenier\u00eda Matem\u00e1tica",
"dim"],["Departamento de Ingenier\u00eda Mec\u00e1nica","dimec"],["Departamento de Ingenier\u00eda Qu\u00edmica, Biotecnolog\u00eda y Materiales","diqbtm"],["Departamento de Postgrado y Post\u00edtulo","postgrado"],["Facultad de Ciencias F\u00edsicas y Matem\u00e1ticas","fcfm"],["Universidad de Chile","uchile"]],h=$("#downloadother-contents");$("#downloadtitle-title").html(String.format("Descargas v{0}",b));h.append(String.format('<div class="downloadother-entry downloadother-compact"><div class="downloadother-name">Versi\u00f3n completa</div><div class="downloadother-link"><a href="{0}download/{1}/Template-Informe.zip">Descargar</a></div></div>',
href_github_project,b));for(let c=0;c<f.length;c+=1)h.append(String.format('<div id="downloadentry-{1}" class="downloadother-entry"><div class="downloadother-name">{0}</div><div class="downloadother-link"><a href="{3}download/{2}/Template-Informe-{1}.zip" class="otherdownloadclickeable">Descargar</a></div></div>',f[c][0],f[c][1],b,href_github_project))};
